/*
 * This file is generated by jOOQ.
 */
package com.tej.JooQDemo.jooq.sample.model.tables.records;


import com.tej.JooQDemo.jooq.sample.model.tables.Teachers;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TeachersRecord extends UpdatableRecordImpl<TeachersRecord> implements Record5<Integer, String, LocalDate, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>customerdb.teachers.id</code>.
     */
    public TeachersRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>customerdb.teachers.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>customerdb.teachers.name</code>.
     */
    public TeachersRecord setName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>customerdb.teachers.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>customerdb.teachers.birthday</code>.
     */
    public TeachersRecord setBirthday(LocalDate value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>customerdb.teachers.birthday</code>.
     */
    public LocalDate getBirthday() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>customerdb.teachers.age</code>.
     */
    public TeachersRecord setAge(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>customerdb.teachers.age</code>.
     */
    public Integer getAge() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>customerdb.teachers.address</code>.
     */
    public TeachersRecord setAddress(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>customerdb.teachers.address</code>.
     */
    public String getAddress() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, LocalDate, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, LocalDate, Integer, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Teachers.TEACHERS.ID;
    }

    @Override
    public Field<String> field2() {
        return Teachers.TEACHERS.NAME;
    }

    @Override
    public Field<LocalDate> field3() {
        return Teachers.TEACHERS.BIRTHDAY;
    }

    @Override
    public Field<Integer> field4() {
        return Teachers.TEACHERS.AGE;
    }

    @Override
    public Field<String> field5() {
        return Teachers.TEACHERS.ADDRESS;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public LocalDate component3() {
        return getBirthday();
    }

    @Override
    public Integer component4() {
        return getAge();
    }

    @Override
    public String component5() {
        return getAddress();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public LocalDate value3() {
        return getBirthday();
    }

    @Override
    public Integer value4() {
        return getAge();
    }

    @Override
    public String value5() {
        return getAddress();
    }

    @Override
    public TeachersRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public TeachersRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public TeachersRecord value3(LocalDate value) {
        setBirthday(value);
        return this;
    }

    @Override
    public TeachersRecord value4(Integer value) {
        setAge(value);
        return this;
    }

    @Override
    public TeachersRecord value5(String value) {
        setAddress(value);
        return this;
    }

    @Override
    public TeachersRecord values(Integer value1, String value2, LocalDate value3, Integer value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TeachersRecord
     */
    public TeachersRecord() {
        super(Teachers.TEACHERS);
    }

    /**
     * Create a detached, initialised TeachersRecord
     */
    public TeachersRecord(Integer id, String name, LocalDate birthday, Integer age, String address) {
        super(Teachers.TEACHERS);

        setId(id);
        setName(name);
        setBirthday(birthday);
        setAge(age);
        setAddress(address);
    }
}
